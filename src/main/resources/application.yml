server:
  port: 8888

## sharding-jdbc ##
sharding:
  jdbc:
    driverClassName: com.mysql.jdbc.Driver
    url: jdbc:mysql://localhost:3306/ds_0?useUnicode=true&characterEncoding=UTF-8&autoReconnect=true&failOverReadOnly=false
    username: root
    password: root
    filters: stat
    maxActive: 100
    initialSize: 1
    maxWait: 15000
    minIdle: 1
    timeBetweenEvictionRunsMillis: 30000
    minEvictableIdleTimeMillis: 180000
    validationQuery: SELECT 'x'
    testWhileIdle: true
    testOnBorrow: false
    testOnReturn: false
    poolPreparedStatements: false
    maxPoolPreparedStatementPerConnectionSize: 20
    removeAbandoned: true
    removeAbandonedTimeout: 600
    logAbandoned: false
    connectionInitSqls:

    url0: jdbc:mysql://localhost:3306/ds_0?useUnicode=true&characterEncoding=UTF-8&autoReconnect=true&failOverReadOnly=false
    username0: root
    password0: root

    url1: jdbc:mysql://localhost:3306/ds_1?useUnicode=true&characterEncoding=UTF-8&autoReconnect=true&failOverReadOnly=false
    username1: root
    password1: root
## sharding-jdbc ##

## kafka ##
spring:
  kafka:
    bootstrap-servers: 192.168.226.137:9092,192.226.138.169:9092,192.168.226.139:9092
    consumer:
      group-id: ceshi
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
      batch-size: 65536
      buffer-memory: 524288
  redis:
    host: 127.0.0.1
    port: 6379
    timeout: 30000
    pool:
      max-active: 8
      max-wait: -1
      max-idle: 8
      min-idle: 0
  thymeleaf:
    #配置前缀
    prefix: classpath:/template/
    #配置后缀
    suffix: .html
    encoding: UTF-8
    content-type: text/html
  #是否开启缓存
    cache: false
##topic
kafka:
  third:
    topic:
      self: second
redis:
  channel: test

logging:
  level: {"root":"debug"}


